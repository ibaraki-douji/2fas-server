services:
  api:
    image: docker.ibaraki.app/mirror/twofas/2fas-server:api
    depends_on:
      init:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
    group_add:
      - '1000'
    volumes:
      - go-modules:/go/pkg/mod
      - shared-volume:/tmp/2fas # don't forget to add the firebase service account here : `/tmp/2fas/2fas-api/service_account_key.json`
    ports:
      - "80:8080"
    env_file:
      - .env

  admin:
    image: docker.ibaraki.app/mirror/twofas/2fas-server:admin
    depends_on:
      init:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
    group_add:
      - '1000'
    volumes:
      - shared-volume:/tmp/2fas
    ports:
      - "8082:8080"
    env_file:
      - .env

  websocket:
    image: docker.ibaraki.app/mirror/twofas/2fas-server:websocket
    depends_on:
      - mysql
    ports:
      - "8081:8081"
    env_file:
      - .env

  mysql:
    image: mysql:8
    volumes:
      - sql_data:/var/lib/mysql
      - init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 10s
        retries: 10
    depends_on:
      init:
        condition: service_completed_successfully

  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  # docker compose always mount named volumes as root (https://github.com/docker/compose/issues/3270)
  # and without changing permission, we want be able to access shared volume
  init:
    image: ubuntu
    user: root
    group_add:
      - '1000'
    volumes:
      - shared-volume:/tmp/2fas
      - init:/tmp/init
    command: >
      bash -c "echo 'Starting init container'
      && apt update && apt install -y wget
      && mkdir -p /tmp/init/ready.d
      && mkdir -p /tmp/init
      && wget -O /tmp/init/ready.d/localstack_init.sh https://raw.githubusercontent.com/twofas/2fas-server/develop/pass/e2e-tests/localstack_init.sh
      && wget -O /tmp/init/dev-schema.sql https://raw.githubusercontent.com/twofas/2fas-server/develop/pass/docker/mysql/dev-schema.sql
      && sed -i 's/IDENTIFIED BY \'2fas\'/IDENTIFIED BY \'$MYSQL_PASSWORD\'/' /tmp/init/dev-schema.sql
      && chmod +x /tmp/init/ready.d/localstack_init.sh
      && chown -R 1000:1000 /tmp/2fas && chown -R 1000:1000 /tmp/init"

  pass:
    image: docker.ibaraki.app/mirror/twofas/2fas-server:pass
    group_add:
      - '1000'
    environment:
      # overwrite AWS_ENDPOINT from .env file. One in env is used to running app from local also.
      AWS_ENDPOINT: http://localstack:4566
      AWS_REGION: us-east-1
    env_file:
      - .env
    depends_on:
      localstack:
        condition: service_healthy

  localstack:
    image: localstack/localstack
    environment:
      - DEBUG=1
    healthcheck:
      test: >-
        curl -s localhost:4566/_localstack/health | grep -q '"kms": "running"'
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - "init:/etc/localstack/init"  # ready hook
      - "stack_data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      init:
        condition: service_completed_successfully

volumes:
  go-modules:
  shared-volume:
  stack_data:
  sql_data:
  init:
